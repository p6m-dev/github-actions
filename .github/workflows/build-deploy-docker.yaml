name: Build & Deploy Multi-Arch Docker Image

on:
  workflow_call:
    # TODO: Add digests for each architecture to outputs.
    # TODO: Add digest for final image
    outputs: {}
    secrets:
      username:
        description: The username to use to authenticate with the Docker registry.
        required: true
      password:
        description: The password to use to authenticate with the Docker registry.
        required: true
      # TODO: Add secrets, secret-envvars, secret-files (i.e. different secret mounting options for docker buildx)
    inputs:
      registry:
        description: The hostname of the Docker registry as you would enter it for the `docker login` command.
        type: string
        required: false
      image-name:
        description: "The namespaced Docker image name. Example: `docker push -t ${registry}/${image_name}:latest`"
        type: string
        default: ${{ github.repository }}
        required: false
      context:
        description: The path to the Docker context to build.
        type: string
        default: '.'
        required: false
      dockerfile:
        description: The absolute path to the Dockerfile to build.
        type: string
        default: './Dockerfile'
        required: false
      build-args:
        description: Build Args to pass to the docker build in key=value format (one per line).
        type: string
        default: ''
        required: false
      tags:
        description: The tags to apply to the final multi-arch image. Uses the same format as docker/metadata-action.
        type: string
        default: ''
        required: true
      linux-arm-runner:
        description: The `runs-on` tag for the linux arm64 runner. Defaults to the Github standard runner.
        type: string
        required: false
        default: ubuntu-24.04-arm

env:
  DOCKER_REGISTRY: ${{ inputs.registry || vars.ARTIFACTORY_HOSTNAME }}

jobs:
  build:
    strategy:
      matrix:
        include:
          - runner: ${{ inputs.linux-arm-runner }}
            platform: linux/arm64
            arch: arm64
          - runner: ubuntu-latest
            platform: linux/amd64
            arch: amd64
          
    name: Docker Build (${{ matrix.platform }})
    runs-on: ${{ matrix.runner }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Repo
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.username }}
          password: ${{ secrets.password }}

      - name: Build and push by digest
        uses: docker/build-push-action@v4
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          platforms: ${{ matrix.platform }}
          cache-from: type=gha,scope=${{ matrix.arch }}
          cache-to: type=gha,mode=max,scope=${{ matrix.arch }}
          build-args: ${{ inputs.build-args }}
          outputs: |
            type=registry,name=${{ env.DOCKER_REGISTRY }}/${{ inputs.image-name }},push-by-digest=true,name-canonical=true

      - name: Export digest
        run: |
          mkdir -p ${RUNNER_TEMP}/digests
          echo "${{ steps.build.outputs.digest }}" > ${RUNNER_TEMP}/digests/digest-${{ matrix.arch }}.txt

      - name: Upload Image Digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.arch }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    name: Create and Push Docker Manifest Lists
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
      - name: Download Image Digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to Docker Repo
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.username }}
          password: ${{ secrets.password }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.DOCKER_REGISTRY }}/${{ inputs.image-name }}
          tags: ${{ inputs.tags }}

      # Setting up the imagetools args in a separate step, lets us leverage Github's `env` context to print out the command that will be run.
      - name: Setup args for Buildx imagetools
        run: |
          echo "IMAGETOOLS_TAGS=$(echo ${DOCKER_METADATA_OUTPUT_TAGS} | xargs -n1 printf '\-t %s ')" >> $GITHUB_ENV
          echo "IMAGETOOLS_SOURCES=$(cat ${RUNNER_TEMP}/digests/* | xargs -n1 printf '${{ env.DOCKER_REGISTRY }}/${{ inputs.DOCKER_IMAGE_NAME }}@%s ')" >> $GITHUB_ENV

      - name: Docker Build/Push Multi-Arch Image
        run: |
          # `docker manifest create` has been deprecated and replaced by `docker buildx imagetools`.
          docker buildx imagetools create ${{ env.IMAGETOOLS_TAGS }} ${{ env.IMAGETOOLS_SOURCES }}

