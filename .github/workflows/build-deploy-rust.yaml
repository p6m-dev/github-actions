name: Build & Deploy (Rust Workspace)

on:
  workflow_call:
    outputs:
      VERSION:
        value: ${{ jobs.current_version.outputs.VERSION }}
    secrets:
      DOCKER_USERNAME:
        description: The username to use to authenticate with the Docker registry.
        required: true
      DOCKER_PASSWORD:
        description: The password to use to authenticate with the Docker registry.
        required: true
      CARGO_TOKENS:
        description: >-
          Registry tokens in key=value format (one per line).
          Example:
            crates-io=token1
            my-registry=token2
        required: false
    inputs:
      MODE:
        description: Release or Debug mode
        type: string
        required: false
        default: release
      DOCKER_REGISTRY:
        description: The hostname of the Docker registry as you would enter it for the `docker login` command.
        type: string
        required: false
      DOCKER_IMAGE_NAME:
        description: "The namespaced Docker image name. Example: `docker push -t ${DOCKER_REGISTRY}/${DOCKER_IMAGE_NAME}:latest`"
        type: string
        default: ${{ github.repository }}
        required: false
      DOCKER_CONTEXT:
        description: The path to the Docker context to build.
        type: string
        default: '.'
        required: false
      DOCKERFILE:
        description: The absolute path to the Dockerfile to build.
        type: string
        default: './Dockerfile'
        required: false
      DO_VERSION_BUMP:
        description: A value indication whether to bump the version as the final step or not.
        type: boolean
        required: false
        default: true
      LINUX_ARM_RUNNER:
        description: The `runs-on` tag for the linux arm64 runner.
        type: string
        required: false
        default: ubuntu-24.04-arm

env:
  CARGO_TERM_COLOR: always
  DOCKER_REGISTRY: ${{ inputs.DOCKER_REGISTRY || vars.ARTIFACTORY_HOSTNAME}}
  RUST_TOOLCHAIN: stable

jobs:
  current_version:
    name: Get Current Version
    outputs:
      VERSION: ${{ steps.pkg-version.outputs.VERSION }}

    runs-on: ubuntu-latest
    
    steps:
      - id: pkg-version
        name: Get Package Version
        run: echo "VERSION=$(cargo xtask pkg-version)" >> $GITHUB_OUTPUT

  build:
    needs:
      - current_version

    uses: p6m-dev/github-actions/.github/workflows/build-deploy-docker.yaml@feat/rust-crossless
    with:
      registry: ${{ env.DOCKER_REGISTRY }}
      image-name: ${{ inputs.DOCKER_IMAGE_NAME }}
      context: ${{ inputs.DOCKER_CONTEXT }}
      dockerfile: ${{ inputs.DOCKERFILE }}
      build-args: |
        MODE=${{ inputs.MODE }}
      tags: |
        type=ref,event=branch
        type=ref,event=pr
        type=raw,value=latest,enable={{is_default_branch}}
        type=raw,value=${{ needs.current_version.outputs.VERSION }},enable={{is_default_branch}}
        type=sha

      linux-arm-runner: ${{ inputs.LINUX_ARM_RUNNER }}

  bump-version:
    if: ${{ inputs.DO_VERSION_BUMP && github.ref_name == 'main' }}
    runs-on: ubuntu-latest
    needs:
      - current_version
      - build

    steps:
      - uses: actions/checkout@v4
      - name: Tag and Push
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag -a ${{ needs.current_version.outputs.VERSION }} -m "Release ${{ needs.current_version.outputs.VERSION }}"
          git push origin ${{ needs.current_version.outputs.VERSION }}

      - name: Install cargo-release
        uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo-release
          version: 0.25.10

      - name: Cargo Registry Login
        uses: p6m-dev/github-actions/cargo-registry-login@main
        with:
          cargo-tokens: ${{ secrets.CARGO_TOKENS }}

      - name: Bump Version
        run: cargo release version patch -x --no-confirm --workspace

      - name: Commit and Push
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "[skip ci] Bump Version"
          git push
