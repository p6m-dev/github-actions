name: 'Build and Test Python'

on:
  workflow_call:
    inputs:
      RUNS_ON:
        default: 'ubuntu-latest'
        required: false
        type: string
    secrets:
      ARTIFACTORY_USERNAME:
        description: 'ARTIFACTORY_USERNAME for poetry auth'
        required: true
      ARTIFACTORY_IDENTITY_TOKEN:
        description: 'ARTIFACTORY_IDENTITY_TOKEN for poetry auth'
        required: true

jobs:
  build_and_test:
    runs-on: ${{inputs.RUNS_ON}}
    steps:
    - name: Install python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'
    
    - name: Install curl
      run: |
        apt-get update
        apt-get install -y curl

    - name: Install poetry
      uses: snok/install-poetry@v1

    - name: Checkout
      uses: actions/checkout@v3

    - name: Install dependencies
      shell: bash
      run: |
        poetry config http-basic.nax_ai_platform_pypi ${{ secrets.ARTIFACTORY_USERNAME }} ${{ secrets.ARTIFACTORY_IDENTITY_TOKEN }}
        poetry install

    - name: Lint with flake8
      shell: bash
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 src tests --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 src tests --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      shell: bash
      run: |
        sh -c 'poetry run pytest tests ;  exit $(( $? == 5 ? 0 : $? ))'
        poetry env remove --all



  