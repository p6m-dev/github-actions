name: Build & Deploy (Rust Service)

on:
  workflow_call:
    outputs:
      digest:
        description: "The docker image digest for the built image"
        value: ${{ jobs.build.outputs.first_digest }}
    secrets:
      DOCKER_USERNAME:
        description: The username to use to authenticate with the Docker registry.
        required: true
      DOCKER_PASSWORD:
        description: The password to use to authenticate with the Docker registry.
        required: true
      CARGO_TOKEN:
        description: The token to use to authenticate with the Cargo registry.
        required: true
      UPDATE_MANIFEST_TOKEN:
        description: The token to use to push the new image digest to the .platform repo.
        required: true
    inputs:
      MODE:
        description: Release or Debug mode
        type: string
        required: false
        default: release
      DOCKER_REGISTRY:
        description: The hostname of the Docker registry as you would enter it for the `docker login` command.
        type: string
        required: false
      DOCKER_IMAGE_NAME:
        description: "The namespaced Docker image name. Example: `docker push -t ${DOCKER_REGISTRY}/${DOCKER_IMAGE_NAME}:latest`"
        type: string
        default: ${{ github.repository }}
        required: false
      DOCKER_CONTEXT:
        description: The path to the Docker context to build.
        type: string
        default: '.'
        required: false
      DOCKERFILE:
        description: The absolute path to the Dockerfile to build.
        type: string
        default: './Dockerfile'
        required: false
      CARGO_REGISTRY_ALIAS:
        description: The alias of the Cargo registry to publish to as specified in the .cargo/config file of the repo.
        type: string
        required: false
        default: 'crates-io' # Default to the public registry
      CARGO_PACKAGES:
        description: A space-separated list of Cargo libraries/packages to publish.
        type: string
        required: false
        default: ''
      DO_VERSION_BUMP:
        description: A value indication whether to bump the version as the final step or not.
        type: boolean
        required: false
        default: true

env:
  CARGO_TERM_COLOR: always
  DOCKER_REGISTRY: ${{ inputs.DOCKER_REGISTRY || vars.ARTIFACTORY_HOSTNAME}}

jobs:
  current_version:
    name: Get Current Version
    outputs:
      VERSION: ${{ steps.pkg-version.outputs.VERSION }}

    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      - name: Login to Cargo Registry
        uses: p6m-actions/rust-registry-login@v1
        with:
          cargo-tokens: |
            ${{ inputs.CARGO_REGISTRY_ALIAS }}=${{ secrets.CARGO_TOKEN }}
      - id: pkg-version
        name: Get Package Version
        run: |
          set -o pipefail
          echo "VERSION=$(cargo xtask pkg-version)" >> $GITHUB_OUTPUT
          echo "VERSION=$VERSION"

  build:
    needs:
      - current_version

    uses: p6m-dev/github-actions/.github/workflows/build-deploy-docker.yaml@main
    with:
      registry: ${{ inputs.DOCKER_REGISTRY || vars.ARTIFACTORY_HOSTNAME}}
      image-name: ${{ inputs.DOCKER_IMAGE_NAME }}
      context: ${{ inputs.DOCKER_CONTEXT }}
      dockerfile: ${{ inputs.DOCKERFILE }}
      build-args: |
        PROFILE=${{ inputs.MODE }}
        PROFILE_DIR=${{ inputs.MODE == 'dev' && 'debug' || 'release' }}
      tags: |
        type=ref,event=branch
        type=ref,event=pr
        type=raw,value=latest,enable={{is_default_branch}}
        type=raw,value=${{ needs.current_version.outputs.VERSION }},enable={{is_default_branch}}
        type=sha
      linux-arm-runner: ubuntu-24.04-arm-provisioned
    secrets:
      username: ${{ secrets.DOCKER_USERNAME }}
      password: ${{ secrets.DOCKER_PASSWORD }}
      secrets: |
        ${{ inputs.CARGO_REGISTRY_ALIAS }}=Bearer ${{ secrets.CARGO_TOKEN }}

  publish-crates:
    if: github.ref_name == 'main'
    # This job has been known to fail due to intermittent issues. We continue on error to avoid blocking the pipeline.
    # Having it as a separate job in the workflow allows us to rerun just this job if it fails.
    continue-on-error: true
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: build

      - name: Login to Cargo Registry
        uses: p6m-actions/rust-registry-login@v1
        with:
          cargo-tokens: |
            ${{ inputs.CARGO_REGISTRY_ALIAS }}=${{ secrets.CARGO_TOKEN }}

      - name: Install cargo-release
        uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo-release
          version: 0.25.18

      - name: Publish Crates
        run: |
          CARGO_RELEASE_TARGET=''
          if [ -n '${{ inputs.CARGO_PACKAGES }}' ]; then
            # If packages are specified, publish only those packages
            CRATES_TO_PUBLISH=$(echo "${{ inputs.CARGO_PACKAGES }}" | xargs -n1 echo -n ' --package')
            CARGO_RELEASE_TARGET="$CARGO_RELEASE_TARGET $CRATES_TO_PUBLISH"
          else
            # If no packages specified, publish all crates in the workspace
            CARGO_RELEASE_TARGET="--workspace"
          fi
          cargo release publish $CARGO_RELEASE_TARGET --registry ${{ inputs.CARGO_REGISTRY_ALIAS }} --no-confirm --no-verify --execute
  
  bump-version:
    if: ${{ inputs.DO_VERSION_BUMP && github.ref_name == 'main' }}
    runs-on: ubuntu-latest
    needs:
      - current_version
      - build
      - publish-crates

    steps:
      - uses: actions/checkout@v4
      - name: Tag and Push
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag -a ${{ needs.current_version.outputs.VERSION }} -m "Release ${{ needs.current_version.outputs.VERSION }}"
          git push origin ${{ needs.current_version.outputs.VERSION }}

      - name: Install cargo-release
        uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo-release
          version: 0.25.18

      - name: Login to Cargo Registry
        uses: p6m-actions/rust-registry-login@v1
        with:
          cargo-tokens: |
            ${{ inputs.CARGO_REGISTRY_ALIAS }}=${{ secrets.CARGO_TOKEN }}

      - name: Bump Version
        run: cargo release version patch -x --no-confirm --workspace

      - name: Commit and Push
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "[skip ci] Bump Version"
          # rebase to most resent changes
          git fetch origin
          git rebase origin/main
          git push

  trigger-cd:
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Trigger Update Image Digest
        run: |
          echo ${{ github.ref }}
          echo ${{ needs.build.outputs.first_digest }}
          echo ${{ vars.PLATFORM_DISPATCH_URL }}
          curl -X POST \
            -H "Accept: application/vnd.github.everest-preview+json" \
            -H "Authorization: token ${{ secrets.UPDATE_MANIFEST_TOKEN }}" \
            ${{ vars.PLATFORM_DISPATCH_URL }} \
            --fail-with-body \
            -d "{\"event_type\": \"update-digest\", \"client_payload\": {\"repository\": \"${GITHUB_REPOSITORY}\", \"directory_name\": \"$(basename ${GITHUB_REPOSITORY})\", \"environment_dir\": \"dev\", \"digest\": \"${{ needs.build.outputs.first_digest }}\"}}"
      
