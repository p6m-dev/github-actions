name: Build & Deploy Apollo Federated Gateway

on:
  workflow_call:
    secrets:
      SUBGRAPH_PULL_TOKEN:
        required: true
      REPOSITORY_PUSH_TOKEN:
        required: true
      ARTIFACTORY_USERNAME:
        required: true
      ARTIFACTORY_IDENTITY_TOKEN:
        required: true
      UPDATE_MANIFEST_TOKEN:
        required: true
    outputs:
      digest:
        description: "The docker image digest for the built image"
        value: ${{ jobs.build_supergraph.outputs.digest }}

jobs:
  find_subgraphs:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.subgraph-matrix.outputs.matrix }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Identify subgraph config
        uses: mikefarah/yq@master
        id: create-subgraph-matrix
        with:
          cmd: yq -o=json -I=0 'with(.subgraphs.*;.automation.repo=key) | .include=[.subgraphs.*.automation] | with_entries(select(.key=="include"))' registry.yaml

      - name: Output subgraph config
        id: subgraph-matrix
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "matrix<<$EOF" >> $GITHUB_OUTPUT
          echo '${{ steps.create-subgraph-matrix.outputs.result }}' >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT

  collect_subgraphs:
    environment: dev
    needs: find_subgraphs
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.find_subgraphs.outputs.matrix) }}
      fail-fast: true
    steps:
      - name: Subgraph config
        run: echo '${{ toJSON(matrix) }}'

      - name: Pull subgraph files
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.SUBGRAPH_PULL_TOKEN }}
          repository: ${{ matrix.org }}/${{ matrix.repo }}
          path: ${{ matrix.repo }}
          ref: ${{ matrix.branch }}

      - uses: actions/upload-artifact@v3
        with:
          name: subgraphs
          path: ${{ matrix.repo }}/${{ matrix.file }}
          if-no-files-found: error

      - name: Record Summary
        run: |
          echo "### ${{ matrix.org }}/${{ matrix.repo }}" >> $GITHUB_STEP_SUMMARY
          echo "Subgraph: [${{ matrix.file }}](https://github.com/${{ matrix.org }}/${{ matrix.repo }}/blob/${{ matrix.branch }}/${{ matrix.file }})" >> $GITHUB_STEP_SUMMARY

  build_supergraph:
    needs: collect_subgraphs
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.build-push.outputs.digest }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          # TODO remove when utilizing a Github App
          token: ${{ secrets.REPOSITORY_PUSH_TOKEN }}

      # Required for Multi-arch builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      ##########

      - uses: actions/download-artifact@v3
        with:
          name: subgraphs
          path: ./subgraphs/

      - name: Build supergraph.yaml
        uses: mikefarah/yq@master
        with:
          cmd: yq '. | ...comments="" | with(.subgraphs.*; .schema.file = "./subgraphs/" + .automation.file) | del(.subgraphs.*.automation)' registry.yaml  >> supergraph.yaml

      - name: Install Rover
        run: |
          curl -sSL https://rover.apollo.dev/nix/v0.13.0 | sh
          echo "$HOME/.rover/bin" >> $GITHUB_PATH

      - name: Generate Rover Subgraph
        run: rover supergraph  compose --elv2-license accept --config supergraph.yaml > ./config/supergraph.graphql

      - name: Update git branch
        if: github.ref == 'refs/heads/main'
        run: |
          git config --global user.email "automation@naxgrp.com"
          git config --global user.name "NAX Group Automation"
          git add .
          git diff-index --quiet HEAD || git commit -m "[skip ci] Update ${{ github.event.repository.name }} supergraph" && git push origin ${{ github.ref_name }}

      - name: Login to Artifactory Container Registry
        uses: docker/login-action@v2
        with:
          registry: naxgrp.jfrog.io
          username: ${{ secrets.ARTIFACTORY_USERNAME }}
          password: ${{ secrets.ARTIFACTORY_IDENTITY_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            naxgrp.jfrog.io/${{ vars.TF_VAR_JV_PROJECT }}-${{ vars.TF_VAR_JV_NAME }}-docker-local/applications/${{ github.event.repository.name }}-server
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}} 
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v4
        id: build-push
        with:
          context: .
          platforms: linux/amd64  #,linux/arm64
          pull: true
          push: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Record Summary
        run: |
          echo "### Docker Tags" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY

      - name: Trigger Update Image Digest
        if: github.ref == 'refs/heads/main'
        run: |
          echo ${{ github.ref }}
          echo ${{ steps.build-push.outputs.digest }}
          echo ${{ vars.PLATFORM_DISPATCH_URL }}
          curl -X POST \
            -H "Accept: application/vnd.github.everest-preview+json" \
            -H "Authorization: token ${{ secrets.UPDATE_MANIFEST_TOKEN }}" \
            ${{ vars.PLATFORM_DISPATCH_URL }} \
            --fail-with-body \
            -d "{\"event_type\": \"update-digest\", \"client_payload\": {\"repository\": \"${GITHUB_REPOSITORY}\", \"directory_name\": \"$(basename ${GITHUB_REPOSITORY})\", \"environment_dir\": \"dev\", \"digest\": \"${{ steps.build-push.outputs.digest }}\"}}"
