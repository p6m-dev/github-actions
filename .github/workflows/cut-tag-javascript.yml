on:
  workflow_call:
    inputs:
      context:
        type: string
        description: "The context for docker build"
        default: "."
      dockerfile:
        type: string
        description: "The absolute path to the DockerFile"
        default: "Dockerfile"
    secrets:
      ARTIFACTORY_USERNAME:
        required: true
      ARTIFACTORY_IDENTITY_TOKEN:
        required: true
    outputs:
      digest:
        description: "The docker image digest for the built image"
        value: ${{ jobs.tag_version.outputs.digest }}
      tag_name:
        description: "Git Tag Name"
        value: ${{ jobs.tag_version.outputs.tag_name }}

jobs:
  tag_version:
    name: Create Tag & Build
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.TAG.outputs.tag_name }}
      tag_value: ${{ steps.TAG.outputs.value }}
      digest: ${{ steps.build-push.outputs.digest }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Required for Multi-arch builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      ##########

      - name: Login to Artifactory Container Registry
        uses: docker/login-action@v2
        with:
          registry: naxgrp.jfrog.io
          username: ${{ secrets.ARTIFACTORY_USERNAME }}
          password: ${{ secrets.ARTIFACTORY_IDENTITY_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Semver
        run: npm install -g semver

      - name: Get Tag Version
        id: TAG
        run: |
          version=$(semver -i patch $(git tag | grep -E 'v*$' | sort -t "." -k1,1n -k2,2n -k3,3n | tail -n1) || echo "1.0.0")
          echo "value=$version"
          echo "value=$version" >> $GITHUB_OUTPUT
          echo "tag_name=v$version"
          echo "tag_name=v$version" >> $GITHUB_OUTPUT

      - name: Git Commit & Tag
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit --allow-empty -am "Set version to ${{ steps.TAG.outputs.tag_name }}"
          git tag -a ${{ steps.TAG.outputs.tag_name }} -m "Release ${{ steps.TAG.outputs.value }}"
          git push origin ${{ steps.TAG.outputs.tag_name }}
          git push origin main

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            naxgrp.jfrog.io/${{ vars.TF_VAR_JV_PROJECT }}-${{ vars.TF_VAR_JV_NAME }}-docker-local/applications/${{ github.event.repository.name }}-server
          tags: |
            type=raw,value=${{ steps.TAG.outputs.tag_name }}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}} 
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v4
        id: build-push
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          platforms: linux/amd64 # ,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Record Summary
        run: |
          echo "### Docker Tags" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY

      - name: Prepare Artifact
        run: |
          echo "${{ steps.build-push.outputs.digest }}" >> digest.txt

      - uses: ncipollo/release-action@v1.12.0
        with:
          name: Version ${{ steps.TAG.outputs.value }}
          tag: ${{ steps.TAG.outputs.tag_name }}
          makeLatest: true
          artifacts: "digest.txt"
          removeArtifacts: true
          generateReleaseNotes: true
          body: |
            Docker Digest: `${{ steps.build-push.outputs.digest }}`
            Docker Tags: `${{ steps.meta.outputs.tags }}`
